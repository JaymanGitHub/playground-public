{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "networkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of the Network Security Group."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "networkSecurityGroupSecurityRulesInbound": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Optional. Array of Inbound Security Rules to deploy to the Network Security Group. When not provided, an NSG including only the built-in roles will be deployed."
            }
        },
        "networkSecurityGroupSecurityRulesOutbound": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Optional. Array of Outbound Security Rules to deploy to the Network Security Group. When not provided, an NSG including only the built-in roles will be deployed."
            }
        },
        "resourceLockProperties": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional. Enable Resource Level Lock. Object that provides lock data."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the resource."
            }
        }
    },
    "variables": {
        "emptyArray": [
        ],
        "securityRulesAll": "[concat(parameters('networkSecurityGroupSecurityRulesInbound'),parameters('networkSecurityGroupSecurityRulesOutbound'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-08-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
            ],
            "properties": {
                "copy": [
                    {
                        "name": "securityRules",
                        "count": "[length(variables('securityRulesAll'))]",
                        "input": {
                            "name": "[variables('securityRulesAll')[copyIndex('securityRules')].name]",
                            "properties": {
                                "description": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'description'),variables('securityRulesAll')[copyIndex('securityRules')].properties.description,'')]",
                                "protocol": "[variables('securityRulesAll')[copyIndex('securityRules')].properties.protocol]",
                                "sourcePortRange": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'sourcePortRange'),variables('securityRulesAll')[copyIndex('securityRules')].properties.sourcePortRange,'')]",
                                "destinationPortRange": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'destinationPortRange'),variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationPortRange,'')]",
                                "sourceAddressPrefix": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'sourceAddressPrefix'),variables('securityRulesAll')[copyIndex('securityRules')].properties.sourceAddressPrefix,'')]",
                                "destinationAddressPrefix": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'destinationAddressPrefix'),variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationAddressPrefix,'')]",
                                "access": "[variables('securityRulesAll')[copyIndex('securityRules')].properties.access]",
                                "priority": "[int(variables('securityRulesAll')[copyIndex('securityRules')].properties.priority)]",
                                "direction": "[variables('securityRulesAll')[copyIndex('securityRules')].properties.direction]",
                                "sourcePortRanges": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'sourcePortRanges'),variables('securityRulesAll')[copyIndex('securityRules')].properties.sourcePortRanges,json('null'))]",
                                "destinationPortRanges": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'destinationPortRanges'),variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationPortRanges,json('null'))]",
                                "sourceAddressPrefixes": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'sourceAddressPrefixes'),variables('securityRulesAll')[copyIndex('securityRules')].properties.sourceAddressPrefixes,json('null'))]",
                                "destinationAddressPrefixes": "[if(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'destinationAddressPrefixes'),variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationAddressPrefixes,json('null'))]",
                                "sourceApplicationSecurityGroups": "[if(and(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'sourceApplicationSecurityGroupIds'),not(empty(variables('securityRulesAll')[copyIndex('securityRules')].properties.sourceApplicationSecurityGroupIds))),concat(variables('emptyArray'),array(json(concat('{\"id\": \"',variables('securityRulesAll')[copyIndex('securityRules')].properties.sourceApplicationSecurityGroupIds[0],'\", \"location\": \"',parameters('location'),'\"}')))),json('null'))]",
                                "destinationApplicationSecurityGroups": "[if(and(contains(variables('securityRulesAll')[copyIndex('securityRules')].properties,'destinationApplicationSecurityGroupIds'),not(empty(variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationApplicationSecurityGroupIds))),concat(variables('emptyArray'),array(json(concat('{\"id\": \"',variables('securityRulesAll')[copyIndex('securityRules')].properties.destinationApplicationSecurityGroupIds[0],'\", \"location\": \"',parameters('location'),'\"}')))),json('null'))]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/locks",
                    "apiVersion": "2016-09-01",
                    "condition": "[not(empty(parameters('resourceLockProperties')))]",
                    "name": "[concat('Microsoft.Authorization/',if(empty(parameters('resourceLockProperties')),'null',parameters('resourceLockProperties').name))]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
                    ],
                    "properties": {
                        "level": "[if(empty(parameters('resourceLockProperties')),'null',parameters('resourceLockProperties').level)]",
                        "notes": "[if(empty(parameters('resourceLockProperties')),'null',parameters('resourceLockProperties').notes)]"
                    }
                }
            ]
        }
    ],
    "functions": [
    ],
    "outputs": {
        "networkSecurityGroupResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the Network Security Groups were created in."
            }
        },
        "networkSecurityGroupResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
            "metadata": {
                "description": "The Resource Ids of the Network Security Group deployed."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "value": "[parameters('networkSecurityGroupName')]",
            "metadata": {
                "description": "The Name of the Network Security Group deployed."
            }
        }
    }
}
